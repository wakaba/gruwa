article {
  display: block;
}

main {
  display: block;
}

p {

}

.operations {
  direction: rtl;
  text-align: right;
}

input:not([type]) {
  box-sizing: border-box;
  width: 100%;
}

button:enabled {
  cursor: pointer;
}

.edit-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin-left: 1em;
  border-style: none;
  padding: .5em;
  min-width: 5em;
  color: black;
  background: rgba(236, 236, 255, 0.7);
}

.edit-button:hover:enabled {
  background: rgb(236, 236, 255);
}

.edit-button:disabled {
  color: gray;
}

.save-button, .cancel-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: .2em .5em;
  border-style: none;
  padding: .5em;
  min-width: 8em;
}

.save-button {
  color: white;
  background: rgb(19, 195, 19);
}

.save-button:hover:enabled {
  background: rgba(19, 195, 19, 0.8);
}

.save-button:disabled {
  color: #eee;
}

.cancel-button {
  color: white;
  background: rgb(195, 19, 19);
}

.cancel-button:hover:enabled {
  background: rgba(195, 19, 19, 0.8);
}

.cancel-button:disabled {
  color: #eee;
}

list-container > .operations {
  margin: 0 0.5em 0.5em 0.5em;
}

header.cover h1 {
  font-size: 500%;
  text-align: center;
  color: rgb(0, 190, 0);
  background: transparent;
  text-shadow: 3px 3px rgb(200, 250, 200);
  font-family: cursive;
  font-style: italic;
}

header.cover h1::first-letter {
  color: green;
  background: transparent;
}

nav.cover {
  text-align: center;
}

article.object:not([hidden]) {
  margin: 0 0.5em 1em 0.5em;
  border: 1px solid rgb(200, 200, 255);
  padding: .5em;
}

article.object:not(.editing)#new-object {
  display: none;
}

article.object.editing > *:not(edit-container) {
  display: none !important;
}

article.object.editing > edit-container {
  display: block;
}

article.object > header h1 {
  display: block;
  margin: 0;
  border-left: .3em solid blue;
  padding-left: .5em;
  font-size: 120%;
  line-height: 1.4;
}

edit-container [contenteditable] {
  border: 1px gray dotted;
  padding: .5em;
  line-height: 1.4;
  white-space: pre-wrap;
  max-height: 90vh;
  overflow: auto;
}

edit-container [contenteditable]:empty[data-placeholder]::after {
  content: attr(data-placeholder);
  color: gray;
  background: transparent;
}

edit-container p {
  margin: 0;
}

article.object > main,
edit-container [data-name=body] {
  margin-top: 1em;
  margin-bottom: 1em;
  min-height: 10em;
  white-space: pre-wrap;
  line-height: 1.5;
}

article.object > footer p,
edit-container > form > footer p {
  display: block;
  margin: 0;
  font-size: 90%;
  line-height: 1.0;
  text-align: right;
  color: gray;
  background: transparent;
}

list-container[key=members] table,
list-container[key=groups] table {
  border-collapse: collapse;
}

list-container[key=members] thead,
list-container[key=groups] thead {
  border-bottom: 3px green solid;
}

list-container[key=members] thead th,
list-container[key=groups] thead th {
  color: green;
  font-weight: bolder;
}

list-container[key=members] th,
list-container[key=groups] th,
list-container[key=members] td,
list-container[key=groups] td {
  padding: .5em;
}

list-container[key=members] tbody tr:nth-child(2n+1),
list-container[key=groups] tbody tr:nth-child(2n+1) {
  background: rgb(245, 255, 245);
  color: black;
}

list-container[key=members] tbody th,
list-container[key=groups] tbody th {
  font-weight: normal;
  min-width: 20em;
  text-align: left;
}

list-container[key=members] tbody th a,
list-container[key=groups] tbody th a {
  display: block;
}

list-container[key=members] td.user_status,
list-container[key=members] td.owner_status,
list-container[key=members] td.member_type,
list-container[key=groups] td.user_status,
list-container[key=groups] td.owner_status,
list-container[key=groups] td.member_type {
  text-align: center;
  min-width: 5em;
}

list-container[key=members] td.desc,
list-container[key=groups] td.desc {
  min-width: 10em;
}

list-container[key=members] tr:not(.editing) input,
list-container[key=members] tr:not(.editing) select,
list-container[key=members] tr:not(.editing) .save-button,
list-container[key=members] tr.editing enum-value,
list-container[key=members] tr.editing span[data-field=desc],
list-container[key=members] tr.editing .edit-button,
html:not([data-group-member-type="2"]) list-container[key=members] input[name=desc],
html[data-group-member-type="2"] list-container[key=members] tr.account-is-self select[name=user_status],
list-container[key=members] tr.account-is-self select[name=member_type],
list-container[key=members] tr.account-is-self select[name=owner_status] {
  display: none;
}

html:not([data-group-member-type="2"]) list-container[key=members] span[data-field=desc],
html[data-group-member-type="2"] list-container[key=members] tr.account-is-self enum-value[data-field=user_status],
list-container[key=members] tr.editing enum-value[data-field=member_type],
list-container[key=members] tr.editing enum-value[data-field=owner_status] {
  display: inline;
}

/*
list-container[key=members] td[data-value="1"],
list-container[key=groups] td[data-value="1"],
list-container[key=members] td[data-value="2"].member_type,
list-container[key=groups] td[data-value="2"].member_type {
  color: black;
  background: rgb(230, 255, 230);
}
*/

list-container[key=members] td[data-value]:not([data-value="1"]):not([data-value="2"]),
list-container[key=groups] td[data-value]:not([data-value="1"]):not([data-value="2"]) {
  color: black;
  background: rgb(255, 230, 230);
}

list-container[key=members] td[data-value="2"].member_type,
list-container[key=groups] td[data-value="2"].member_type {
  font-weight: bolder;
}

/*

Copyright 2016 Wakaba <wakaba@suikawiki.org>.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Affero General Public License for more details.

You does not have received a copy of the GNU Affero General Public
License along with this program, see <http://www.gnu.org/licenses/>.

*/